// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.6
// source: grpc/pb/sending/sending.proto

package sending_proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PricingGrpcClient is the client API for PricingGrpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PricingGrpcClient interface {
	CreateJobAssignment(ctx context.Context, in *CreateJobAssignmentRequest, opts ...grpc.CallOption) (*CreateJobAssignmentResponse, error)
}

type pricingGrpcClient struct {
	cc grpc.ClientConnInterface
}

func NewPricingGrpcClient(cc grpc.ClientConnInterface) PricingGrpcClient {
	return &pricingGrpcClient{cc}
}

func (c *pricingGrpcClient) CreateJobAssignment(ctx context.Context, in *CreateJobAssignmentRequest, opts ...grpc.CallOption) (*CreateJobAssignmentResponse, error) {
	out := new(CreateJobAssignmentResponse)
	err := c.cc.Invoke(ctx, "/sending.PricingGrpc/CreateJobAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PricingGrpcServer is the server API for PricingGrpc service.
// All implementations must embed UnimplementedPricingGrpcServer
// for forward compatibility
type PricingGrpcServer interface {
	CreateJobAssignment(context.Context, *CreateJobAssignmentRequest) (*CreateJobAssignmentResponse, error)
	mustEmbedUnimplementedPricingGrpcServer()
}

// UnimplementedPricingGrpcServer must be embedded to have forward compatible implementations.
type UnimplementedPricingGrpcServer struct {
}

func (UnimplementedPricingGrpcServer) CreateJobAssignment(context.Context, *CreateJobAssignmentRequest) (*CreateJobAssignmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateJobAssignment not implemented")
}
func (UnimplementedPricingGrpcServer) mustEmbedUnimplementedPricingGrpcServer() {}

// UnsafePricingGrpcServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PricingGrpcServer will
// result in compilation errors.
type UnsafePricingGrpcServer interface {
	mustEmbedUnimplementedPricingGrpcServer()
}

func RegisterPricingGrpcServer(s grpc.ServiceRegistrar, srv PricingGrpcServer) {
	s.RegisterService(&PricingGrpc_ServiceDesc, srv)
}

func _PricingGrpc_CreateJobAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobAssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricingGrpcServer).CreateJobAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sending.PricingGrpc/CreateJobAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricingGrpcServer).CreateJobAssignment(ctx, req.(*CreateJobAssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PricingGrpc_ServiceDesc is the grpc.ServiceDesc for PricingGrpc service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PricingGrpc_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sending.PricingGrpc",
	HandlerType: (*PricingGrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateJobAssignment",
			Handler:    _PricingGrpc_CreateJobAssignment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/pb/sending/sending.proto",
}
